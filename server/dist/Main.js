// Generated by psc version 0.6.9.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Show = function (show) {
        this.show = show;
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var show = function (dict) {
        return dict.show;
    };
    return {
        Show: Show, 
        show: show, 
        "$": $dollar
    };
})();
var PS = PS || {};
PS.Data_Foreign_EasyFFI = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeForeignProcedure(args) {  return function (stmt) {    return Function(wrap(args.slice()))();    function wrap() {      return !args.length ? stmt : 'return function (' + args.shift() + ') { ' + wrap() + ' };';    }  };};
    return {
        unsafeForeignProcedure: unsafeForeignProcedure
    };
})();
var PS = PS || {};
PS.Node_Express_Types = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_EasyFFI = PS.Data_Foreign_EasyFFI;
    var Data_String_Regex = PS.Data_String_Regex;
    var Data_Default = PS.Data_Default;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Control_Monad_Eff_Class = PS.Control_Monad_Eff_Class;
    var ALL = (function () {
        function ALL() {

        };
        ALL.value = new ALL();
        return ALL;
    })();
    var GET = (function () {
        function GET() {

        };
        GET.value = new GET();
        return GET;
    })();
    var POST = (function () {
        function POST() {

        };
        POST.value = new POST();
        return POST;
    })();
    var PUT = (function () {
        function PUT() {

        };
        PUT.value = new PUT();
        return PUT;
    })();
    var DELETE = (function () {
        function DELETE() {

        };
        DELETE.value = new DELETE();
        return DELETE;
    })();
    var OPTIONS = (function () {
        function OPTIONS() {

        };
        OPTIONS.value = new OPTIONS();
        return OPTIONS;
    })();
    var HEAD = (function () {
        function HEAD() {

        };
        HEAD.value = new HEAD();
        return HEAD;
    })();
    var TRACE = (function () {
        function TRACE() {

        };
        TRACE.value = new TRACE();
        return TRACE;
    })();
    var CustomMethod = (function () {
        function CustomMethod(value0) {
            this.value0 = value0;
        };
        CustomMethod.create = function (value0) {
            return new CustomMethod(value0);
        };
        return CustomMethod;
    })();
    var RoutePattern = {};
    var showMethod = new Prelude.Show(function (_361) {
        if (_361 instanceof ALL) {
            return "all";
        };
        if (_361 instanceof GET) {
            return "get";
        };
        if (_361 instanceof POST) {
            return "post";
        };
        if (_361 instanceof PUT) {
            return "put";
        };
        if (_361 instanceof DELETE) {
            return "delete";
        };
        if (_361 instanceof OPTIONS) {
            return "options";
        };
        if (_361 instanceof HEAD) {
            return "head";
        };
        if (_361 instanceof TRACE) {
            return "trace";
        };
        if (_361 instanceof CustomMethod) {
            return _361.value0;
        };
        throw new Error("Failed pattern match");
    });
    var routePath = RoutePattern;
    return {
        ALL: ALL, 
        GET: GET, 
        POST: POST, 
        PUT: PUT, 
        DELETE: DELETE, 
        OPTIONS: OPTIONS, 
        HEAD: HEAD, 
        TRACE: TRACE, 
        CustomMethod: CustomMethod, 
        RoutePattern: RoutePattern, 
        showMethod: showMethod, 
        routePath: routePath
    };
})();
var PS = PS || {};
PS.Node_Express_Internal_Response = (function () {
    "use strict";
    var Data_Foreign_EasyFFI = PS.Data_Foreign_EasyFFI;
    var Prelude = PS.Prelude;
    var Node_Express_Internal_Utils = PS.Node_Express_Internal_Utils;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff_Class = PS.Control_Monad_Eff_Class;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Node_Express_Types = PS.Node_Express_Types;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var intlRespSendJson = Data_Foreign_EasyFFI.unsafeForeignProcedure([ "resp", "data", "" ])("resp.json(data)");
    return {
        intlRespSendJson: intlRespSendJson
    };
})();
var PS = PS || {};
PS.Node_Express_Handler = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Node_Express_Internal_Utils = PS.Node_Express_Internal_Utils;
    var Node_Express_Internal_Request = PS.Node_Express_Internal_Request;
    var Node_Express_Internal_QueryString = PS.Node_Express_Internal_QueryString;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad = PS.Control_Monad;
    var Node_Express_Internal_Response = PS.Node_Express_Internal_Response;
    var Data_Foreign_EasyFFI = PS.Data_Foreign_EasyFFI;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Class = PS.Control_Monad_Eff_Class;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Node_Express_Types = PS.Node_Express_Types;
    var HandlerM = (function () {
        function HandlerM(value0) {
            this.value0 = value0;
        };
        HandlerM.create = function (value0) {
            return new HandlerM(value0);
        };
        return HandlerM;
    })();
    var withHandler = function (_487) {
        return _487.value0;
    };
    var sendJson = function (data_) {
        return new HandlerM(function (_472) {
            return function (resp) {
                return function (_471) {
                    return Node_Express_Internal_Response.intlRespSendJson(resp)(data_);
                };
            };
        });
    };
    return {
        sendJson: sendJson, 
        withHandler: withHandler
    };
})();
var PS = PS || {};
PS.Node_Express_Internal_App = (function () {
    "use strict";
    var Data_Foreign_EasyFFI = PS.Data_Foreign_EasyFFI;
    var Prelude = PS.Prelude;
    var Node_Express_Internal_Utils = PS.Node_Express_Internal_Utils;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Node_Express_Types = PS.Node_Express_Types;
    var Node_Express_Handler = PS.Node_Express_Handler;
    var intlAppHttp = function (__dict_RoutePattern_498) {
        return Data_Foreign_EasyFFI.unsafeForeignProcedure([ "app", "method", "route", "cb", "" ])("app[method](route, function(req, resp, next) { return cb(req)(resp)(next)(); })");
    };
    return {
        intlAppHttp: intlAppHttp
    };
})();
var PS = PS || {};
PS.Node_Express_App = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Node_Express_Internal_App = PS.Node_Express_Internal_App;
    var Node_Express_Handler = PS.Node_Express_Handler;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Class = PS.Control_Monad_Eff_Class;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Node_Express_Types = PS.Node_Express_Types;
    var AppM = (function () {
        function AppM(value0) {
            this.value0 = value0;
        };
        AppM.create = function (value0) {
            return new AppM(value0);
        };
        return AppM;
    })();
    var http = function (__dict_RoutePattern_501) {
        return function (method) {
            return function (route) {
                return function (handler) {
                    return new AppM(function (app) {
                        return Node_Express_Internal_App.intlAppHttp(__dict_RoutePattern_501)(app)(Prelude.show(Node_Express_Types.showMethod)(method))(route)(Node_Express_Handler.withHandler(handler));
                    });
                };
            };
        };
    };
    var get = function (__dict_RoutePattern_505) {
        return http(__dict_RoutePattern_505)(Node_Express_Types.GET.value);
    };
    var apply = function (_496) {
        return function (app) {
            return _496.value0(app);
        };
    };
    return {
        get: get, 
        http: http, 
        apply: apply
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Node_Express_Handler = PS.Node_Express_Handler;
    var Node_Express_App = PS.Node_Express_App;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Node_Express_Types = PS.Node_Express_Types;
    
  function foreignMain(attachFn) {
    return function() {
      var express = require('express');
      var app     = express();
      app.use('/hangman', express.static('../client'));
      attachFn(app)();
      app.listen(3000);
    }
  }
  ;
    var handler = Node_Express_Handler.sendJson({
        puzzle: "This came from the server"
    });
    var app = Node_Express_App.get(Node_Express_Types.routePath)("/puzzle")(handler);
    var attach = Node_Express_App.apply(app);
    var main = foreignMain(attach);
    return {
        main: main, 
        foreignMain: foreignMain, 
        attach: attach, 
        app: app, 
        handler: handler
    };
})();
PS.Main.main();
